{"version":3,"sources":["components/navbar.component.tsx","selectors/selectors.ts","actions/employee.ts","components/employee-list.component.tsx","components/edit-employee.component.tsx","components/create-employee.component.tsx","App.tsx","reportWebVitals.js","reducers/reducers.ts","constants/endPoints.ts","saga/api.ts","saga/saga.ts","saga/index.ts","store.ts","index.tsx"],"names":["NavContianer","styled","nav","NavBrand","div","RightElement","Navbar","className","to","getEmployees","state","employees","data","getEmployeesLoading","isLoading","CREATE_EMPLOYEE","createEmployee","employee","type","payload","REMOVE_EMPLOYEE","removeEmployee","employeeId","UPDATE_EMPLOYEE","LOAD_EMPLOYEES_IN_PROGRESS","LOAD_EMPLOYEES_SUCCESS","LOAD_EMPLOYEES_FAILURE","Employee","props","name","dob","gender","salary","_id","style","border","color","onClick","deleteEmployee","connect","employeesR","dispatch","startLoadingEmployees","onRemovePressed","id","useEffect","loadingMessage","content","map","onEditPressed","updatedEmployeeInfo","updateEmployee","useState","employeeName","setEmployeeName","employeeDob","setEmployeeDob","employeeGender","setEmployeeGender","employeeSalary","setEmployeeSalary","onSubmit","e","preventDefault","updatedEmployee","match","params","window","location","href","required","value","onChange","target","onCreatePressed","onSubmitHandler","a","newEmployee","App","path","exact","component","EmployeeList","EditEmployee","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","baseURL","addEmployeeRequest","body","JSON","stringify","fetch","headers","method","response","json","console","log","removeEmployeeRequest","eId","updateEmployeeRequest","emp","axios","patch","res","status","getEmployeesSaga","getAddEmployeesWatcher","addEmployeeSaga","addEmployeesWatcher","removeEmployeeSaga","removeEmployeeWatcher","updateEmployeeSaga","updateEmployeeWatcher","employeessSaga","call","Effects","put","takeLatest","takeLeading","all","action","error","sagas","sagaMiddleware","createSagaMiddleware","reducers","concat","employeeToRemoveId","filter","alert","withDevTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","run","empSaga","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc837514.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n\nconst NavContianer = styled.nav`\n  display: flex;\n  padding: 1.4rem;\n`\nconst NavBrand = styled.div`\njustify-content: center;\nalign-items: center;\n`\nconst RightElement = styled.div`\njustify-content: end;\nalign-items: center;\n`\n\nconst Navbar = () => {\n  return (\n    <NavContianer className=\"navbar navbar-dark bg-dark navbar-expand-lg container-par\">\n      <NavBrand>      \n        <Link to=\"/\" className=\"navbar-brand\">\n        Employee Management Admin System\n        </Link>\n      </NavBrand>\n      <RightElement className=\"collpase navbar-collapse\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"navbar-item right-display\">\n            <Link to=\"/create\" className=\"nav-link\">\n              Add Employee\n            </Link>\n          </li>\n        </ul>\n      </RightElement>\n    </NavContianer>\n  );\n};\n\nexport default Navbar;\n","import { RootState } from '../store'\n\nexport const getEmployees = (state: RootState) => state.employees.data;\nexport const getEmployeesLoading = (state: RootState) => state.employees.isLoading;\n","\nimport { IEmployee, IId} from '../typeDefs'\n\nexport interface IId2 {\n  id: string\n}\n\nexport const CREATE_EMPLOYEE = 'CREATE_EMPLOYEE';\nexport const createEmployee = (employee: IEmployee) => ({\n  type: CREATE_EMPLOYEE,\n  payload: employee ,\n});\n\nexport const REMOVE_EMPLOYEE = 'REMOVE_EMPLOYEE';\nexport const removeEmployee = (employeeId: IId) => ({\n  type: REMOVE_EMPLOYEE,\n  payload: { employeeId },\n});\n\nexport const UPDATE_EMPLOYEE = 'UPDATE_EMPLOYEE';\nexport const updateEmployee = (id: IId2, updatedEmployeeInfo: IEmployee) => ({\n  type: UPDATE_EMPLOYEE,\n  payload: { id, updatedEmployeeInfo },\n});\n\nexport const LOAD_EMPLOYEES_IN_PROGRESS = 'LOAD_EMPLOYEES_IN_PROGRESS';\nexport const loadEmployeesInProgress = () => ({\n  type: LOAD_EMPLOYEES_IN_PROGRESS,\n});\n\nexport const LOAD_EMPLOYEES_SUCCESS = 'LOAD_EMPLOYEES_SUCCESS';\nexport const loadEmployeesSuccess = (employees: [IEmployee]) => ({\n  type: LOAD_EMPLOYEES_SUCCESS,\n  payload: { employees },\n});\n\nexport const LOAD_EMPLOYEES_FAILURE = 'LOAD_EMPLOYEES_FAILURE';\nexport const loadEmployeesFailure = () => ({\n  type: LOAD_EMPLOYEES_FAILURE,\n});\n","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getEmployees, getEmployeesLoading } from '../selectors/selectors';\nimport { loadEmployeesInProgress, removeEmployee } from '../actions/employee'\nimport { IEmployee, IId } from '../typeDefs'\n\nconst Employee = (props: any) => {\n  return (\n    <tr>\n      <td>{props.employee.name}</td>\n      <td>{props.employee.dob}</td>\n      <td>{props.employee.gender}</td>\n      <td>{props.employee.salary}</td>\n      <td>\n        <Link to={'/edit/' + props.employee._id}>edit</Link> |{' '}\n        <button\n        style={{border: 'none', color: 'red'}}\n          onClick={() => {\n            props.deleteEmployee(props.employee._id);\n          }}\n        >\n          delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nconst EmployeeList = (props: any) => {\n  const {startLoadingEmployees} = props \n  useEffect(() => {\n    startLoadingEmployees();\n  }, [startLoadingEmployees]);\n  const employees = () => {\n    const loadingMessage = <div>Loading Employees...</div>;\n    const content = props.employeesR.map((employee: IEmployee) => {\n      // console.log('The Emp: ', employee);\n      return (\n        <Employee\n          employee={employee}\n          deleteEmployee={props.onRemovePressed}\n          key={employee._id}\n        />\n      );\n    });\n    return props.isLoading ? loadingMessage : content;\n  };\n\n  return (\n    <div>\n      <h3>Employees</h3>\n      <table className=\"table\">\n        <thead className=\"thead-light\">\n          <tr>\n            <th>Name</th>\n            <th>Date of Birth</th>\n            <th>Gender</th>\n            <th>Salary</th>\n          </tr>\n        </thead>\n        <tbody>{employees()}</tbody>\n      </table>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => ({\n  isLoading: getEmployeesLoading(state),\n  employeesR: getEmployees(state),\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  startLoadingEmployees: () => dispatch(loadEmployeesInProgress()),\n  onRemovePressed: (id: IId) => dispatch(removeEmployee(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updateEmployee } from '../actions/employee'\nimport { IId2 } from '../actions/employee'\nimport { IEmployee } from '../typeDefs'\n\n\nconst EditEmployee = (props: any) => {\n  const [employeeName, setEmployeeName] = useState('');\n  const [employeeDob, setEmployeeDob] = useState('');\n  const [employeeGender, setEmployeeGender] = useState('');\n  const [employeeSalary, setEmployeeSalary] = useState(0);\n\n  const onChangeUsername = (e: any) => {\n    setEmployeeName(e.target.value);\n  };\n  const onChangeDob = (e: any) => {\n    setEmployeeDob(e.target.value);\n  };\n  const onChangeGender = (e: any) => {\n    setEmployeeGender(e.target.value);\n  };\n  const onChangeSalary = (e: any) => {\n    setEmployeeSalary(e.target.value);\n  };\n  const onSubmitHandler = (e: any) => {\n    e.preventDefault();\n\n    const updatedEmployee = {\n      name: employeeName,\n      dob: employeeDob,\n      gender: employeeGender,\n      salary: employeeSalary,\n    };\n\n    props.onEditPressed(props.match.params.id, updatedEmployee);\n    window.location.href = '/';\n  };\n\n  return (\n    <div>\n      <h3>Edit Employee</h3>\n      <form onSubmit={onSubmitHandler}>\n        <div className=\"form-group\">\n          <label>name: </label>\n          <input\n            required\n            className=\"form-control\"\n            value={employeeName}\n            onChange={onChangeUsername}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>dob: </label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            value={employeeDob}\n            onChange={onChangeDob}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Gender: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={employeeGender}\n            onChange={onChangeGender}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>salary: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={employeeSalary}\n            onChange={onChangeSalary}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Edit Employee\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onEditPressed: (id: IId2, employee: IEmployee) =>\n    dispatch(updateEmployee(id, employee)),\n});\n\nexport default connect(null, mapDispatchToProps)(EditEmployee);\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createEmployee } from '../actions/employee'\nimport { IEmployee } from '../typeDefs'\n\n\nconst CreateEmployee = (props: any) => {\n  const [employeeName, setEmployeeName] = useState('');\n  const [employeeDob, setEmployeeDob] = useState('');\n  const [employeeGender, setEmployeeGender] = useState('');\n  const [employeeSalary, setEmployeeSalary] = useState(0);\n\n  const onChangeUsername = (e: any) => {\n    setEmployeeName(e.target.value);\n  };\n  const onChangeDob = (e: any) => {\n    setEmployeeDob(e.target.value);\n  };\n  const onChangeGender = (e: any) => {\n    setEmployeeGender(e.target.value);\n  };\n  const onChangeSalary = (e: any) => {\n    setEmployeeSalary(e.target.value);\n  };\n\n  const onSubmitHandler = async (e: any) => {\n    e.preventDefault();\n\n    const newEmployee = {\n      name: employeeName,\n      dob: employeeDob,\n      gender: employeeGender,\n      salary: employeeSalary,\n    };\n    props.onCreatePressed(newEmployee);\n    window.location.href = '/';\n  };\n\n  return (\n    <div>\n      <h3>Create New Employee</h3>\n      <form onSubmit={onSubmitHandler}>\n        <div className=\"form-group\">\n          <label>Name: </label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            value={employeeName}\n            onChange={onChangeUsername}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Date of Birth: </label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            value={employeeDob}\n            onChange={onChangeDob}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Gender</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={employeeGender}\n            onChange={onChangeGender}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Salary</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={employeeSalary}\n            onChange={onChangeSalary}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Add Employee\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onCreatePressed: (employee: IEmployee) => dispatch(createEmployee(employee)),\n});\n\nexport default connect(null, mapDispatchToProps)(CreateEmployee);\n","// import './App.css';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\n\nimport Navbar from \"./components/navbar.component\"\nimport EmployeeList from \"./components/employee-list.component\";\nimport EditEmployee from \"./components/edit-employee.component\";\nimport createEmployee from \"./components/create-employee.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"container\">\n      <Navbar />\n      <br/>\n      <Route path=\"/\" exact component={EmployeeList} />\n      <Route path=\"/edit/:id\" component={EditEmployee} />\n      <Route path=\"/create\" component={createEmployee} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  CREATE_EMPLOYEE,\n  REMOVE_EMPLOYEE,\n  UPDATE_EMPLOYEE,\n  LOAD_EMPLOYEES_IN_PROGRESS,\n  LOAD_EMPLOYEES_SUCCESS,\n  LOAD_EMPLOYEES_FAILURE,\n} from '../actions/employee';\nimport { IEmployee, IAction } from '../typeDefs'\n\n\nconst initialState = { isLoading: false, data: [] };\n\nexport const employees = (state = initialState, action: IAction) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CREATE_EMPLOYEE: {\n      const { employee } = payload;\n      return {\n        ...state,\n        data: state.data.concat(employee),\n      };\n    }\n    case REMOVE_EMPLOYEE: {\n      const { employeeId: employeeToRemoveId } = payload;\n      return {\n        ...state,\n        data: state.data.filter((emp: IEmployee) => emp._id !== employeeToRemoveId),\n      };\n    }\n    case UPDATE_EMPLOYEE: {\n      const { id, updatedEmployeeInfo} = payload;\n      alert(id)\n      console.log(\"esti: \",updatedEmployeeInfo)\n      return {\n        ...state,\n        data: state.data.map((employee: IEmployee) => {\n          if (employee._id === id) {\n            return updatedEmployeeInfo;\n          }\n          return employee;\n        }),\n      };\n    }\n    case LOAD_EMPLOYEES_SUCCESS: {\n      const { employees } = payload;\n      return {\n        ...state,\n        isLoading: false,\n        data: employees,\n      };\n    }\n    case LOAD_EMPLOYEES_IN_PROGRESS:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case LOAD_EMPLOYEES_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n};\n","const baseURL: string = 'https://emp-mgmt1.herokuapp.com'\nexport default baseURL;","import axios from 'axios'\nimport { IEmployee, IId, IEmpl} from '../typeDefs'\nimport baseURL from '../constants/endPoints';\n\nexport const loadEmployees = () => async (dispatch: any) => {\n  try {\n    const response = await fetch(`${baseURL}/api/employees`);\n    const employees = await response.json();\n    return employees.data.data;\n  } catch (e) {\n    console.log(e)\n  }\n};\n\nexport const addEmployeeRequest = async (newEmployee: IEmployee) => {\n  try {\n    const body = JSON.stringify(newEmployee);\n    const response = await fetch(`${baseURL}/api/employees`, {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'post',\n      body,\n    });\n    const employee = await response.json();\n    return employee;\n  } catch (e) {\n    console.log(e)\n  }\n};\n\nexport const removeEmployeeRequest = async (id: IId) => {\n  try {\n    const eId  = id.employeeId;\n    await fetch(`${baseURL}/api/employees/${eId}`, {\n      method: 'delete',\n    });\n    return\n  } catch (e) {\n    console.log(e)\n  }\n};\n\nexport const updateEmployeeRequest =\n  async (emp: IEmpl) => {\n    try {\n      const { id, updatedEmployeeInfo} = emp;\n       axios\n      .patch(\n        `${baseURL}/api/employees/${id}`,\n        updatedEmployeeInfo\n      )\n      .then((res: any) => res.data.status);\n\n    } catch (e) {\n      console.log('My Error: ', e)\n    console.log(e)\n    }\n  };\n\nexport const displayAlert = (text: string) => {\n  alert(text);\n};\n","import * as Effects from \"redux-saga/effects\";\nimport {\n  CREATE_EMPLOYEE,\n  createEmployee,\n  REMOVE_EMPLOYEE,\n  removeEmployee,\n  UPDATE_EMPLOYEE,\n  LOAD_EMPLOYEES_IN_PROGRESS,\n  loadEmployeesSuccess,\n  loadEmployeesFailure\n} from '../actions/employee';\nimport { loadEmployees, addEmployeeRequest, removeEmployeeRequest, updateEmployeeRequest } from './api';\n\nimport { IAction } from '../typeDefs'\n\n\nconst call: any = Effects.call;\nconst put: any = Effects.put;\nconst takeLatest: any = Effects.takeLatest;\nconst takeLeading: any = Effects.takeLeading;\nconst all: any = Effects.all;\n\n\nfunction* getEmployeesSaga(): any {\n  try {\n    const data = yield call(loadEmployees());\n    yield put(loadEmployeesSuccess(data));\n  } catch (error) {\n    yield put(loadEmployeesFailure());\n  }\n}\n\nfunction* getAddEmployeesWatcher() {\n  yield takeLatest(LOAD_EMPLOYEES_IN_PROGRESS, getEmployeesSaga);\n}\n\nfunction* addEmployeeSaga(action: IAction): any {\n  try {\n    const data = yield call(addEmployeeRequest(action.payload));\n    yield put(createEmployee(data));\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nfunction* addEmployeesWatcher() {\n  yield takeLeading(CREATE_EMPLOYEE, addEmployeeSaga);\n}\n\n\nfunction* removeEmployeeSaga(action: IAction) {\n  try {\n    yield call(removeEmployeeRequest(action.payload));\n    yield put(removeEmployee(action.payload));\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nfunction* removeEmployeeWatcher() {\n  yield takeLeading(REMOVE_EMPLOYEE, removeEmployeeSaga);\n}\n\n\n\nfunction* updateEmployeeSaga(action: IAction) {\n  try {\n    yield call(updateEmployeeRequest(action.payload));\n    // yield put(updateEmployee());\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nfunction* updateEmployeeWatcher() {\n  yield takeLeading(UPDATE_EMPLOYEE, updateEmployeeSaga);\n}\n\nexport default function* employeessSaga() {\n  yield all([getAddEmployeesWatcher(), addEmployeesWatcher(), removeEmployeeWatcher(), updateEmployeeWatcher()]);\n}\n","import { all } from 'redux-saga/effects';\nimport employeessSaga from './saga';\n\nexport default function* sagas() {\n  yield all([employeessSaga()]);\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware  from 'redux-saga'\nimport { employees } from './reducers/reducers';\nimport empSaga from './saga/index'\n\nconst sagaMiddleware = createSagaMiddleware()\n\n\nconst reducers = {\n  employees,\n};\n\nconst withDevTools =\n  (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n// const withDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers(reducers);\n\n// const store = createStore(\n//   rootReducer,\n//   withDevTools(applyMiddleware(sagaMiddleware))\n// );\n\nconst store = createStore(\n    rootReducer,\n  withDevTools(applyMiddleware(sagaMiddleware))\n)\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\nsagaMiddleware.run(empSaga)\nexport default store\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n            <App />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}